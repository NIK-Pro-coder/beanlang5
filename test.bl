/*
	This file contains all the sections to test
	the various translation templates, please note
	that comment are ignored in token parsing and,
	as such, they are not translated
*/

# constDeclare
int const CONSTANT_VAR = 100

# varDeclare
int mutable_var = 10
float test_float = .3

# ifStatement
if CONSTANT_VAR > 10 {
	println(1)
} elif CONSTANT_VAR > 5 {
	println(2)
} else {
	println(3)
}
# funcDefine
fn addnums(int x, int y) -> int {
	# returnStatement
	return x + y
}

# varUpdate + funcCall
mutable_var += addnums((10 + 5)/3 * 2, 5)

# whileLoop
while mutable_var > 0 {
	println(mutable_var)
	mutable_var -= 1
}

# Testing special symbols

# Binary Ops
mutable_var = 1 && 3
mutable_var = 1 || 3
mutable_var = 1 ^^ 3

# Number Ops
mutable_var = 2 ^ 3

# String Ops
str test_str = "hello" >< " " >< "world"

# Bool Ops
bool test_bool = true | false
test_bool = true | false
