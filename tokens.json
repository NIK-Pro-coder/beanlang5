[{"value": "/*\n This file contains all the sections to test\n the various translation templates, please note\n that comment are ignored in token parsing and,\n as such, they are not translated\n*/", "type": "comment", "span": [0, 180]}, {"value": "\n", "type": "newline", "span": [180, 181]}, {"value": "\n", "type": "newline", "span": [181, 182]}, {"value": "# constDeclare", "type": "comment", "span": [182, 196]}, {"value": "\n", "type": "newline", "span": [196, 197]}, {"value": "int", "type": "type", "span": [197, 200]}, {"value": "const", "type": "keyword", "span": [201, 206]}, {"value": "CONSTANT_VAR", "type": "identifier", "span": [207, 219]}, {"value": "=", "type": "assign", "span": [220, 221]}, {"value": "100", "type": "int", "span": [222, 225]}, {"value": "\n", "type": "newline", "span": [225, 226]}, {"value": "\n", "type": "newline", "span": [226, 227]}, {"value": "# varDeclare", "type": "comment", "span": [227, 239]}, {"value": "\n", "type": "newline", "span": [239, 240]}, {"value": "int", "type": "type", "span": [240, 243]}, {"value": "mutable_var", "type": "identifier", "span": [244, 255]}, {"value": "=", "type": "assign", "span": [256, 257]}, {"value": "10", "type": "int", "span": [258, 260]}, {"value": "\n", "type": "newline", "span": [260, 261]}, {"value": "float", "type": "type", "span": [261, 266]}, {"value": "test_float", "type": "identifier", "span": [267, 277]}, {"value": "=", "type": "assign", "span": [278, 279]}, {"value": ".3", "type": "float", "span": [280, 282]}, {"value": "\n", "type": "newline", "span": [282, 283]}, {"value": "\n", "type": "newline", "span": [283, 284]}, {"value": "# ifStatement", "type": "comment", "span": [284, 297]}, {"value": "\n", "type": "newline", "span": [297, 298]}, {"value": "if", "type": "keyword", "span": [298, 300]}, {"value": "CONSTANT_VAR", "type": "identifier", "span": [301, 313]}, {"value": ">", "type": "logicOp", "span": [314, 315]}, {"value": "10", "type": "int", "span": [316, 318]}, {"value": "{", "type": "parenteses", "span": [319, 320]}, {"value": "\n", "type": "newline", "span": [320, 321]}, {"value": "println", "type": "identifier", "span": [322, 329]}, {"value": "(", "type": "parenteses", "span": [329, 330]}, {"value": "1", "type": "int", "span": [330, 331]}, {"value": ")", "type": "parenteses", "span": [331, 332]}, {"value": "\n", "type": "newline", "span": [332, 333]}, {"value": "}", "type": "parenteses", "span": [333, 334]}, {"value": "elif", "type": "keyword", "span": [335, 339]}, {"value": "CONSTANT_VAR", "type": "identifier", "span": [340, 352]}, {"value": ">", "type": "logicOp", "span": [353, 354]}, {"value": "5", "type": "int", "span": [355, 356]}, {"value": "{", "type": "parenteses", "span": [357, 358]}, {"value": "\n", "type": "newline", "span": [358, 359]}, {"value": "println", "type": "identifier", "span": [360, 367]}, {"value": "(", "type": "parenteses", "span": [367, 368]}, {"value": "2", "type": "int", "span": [368, 369]}, {"value": ")", "type": "parenteses", "span": [369, 370]}, {"value": "\n", "type": "newline", "span": [370, 371]}, {"value": "}", "type": "parenteses", "span": [371, 372]}, {"value": "else", "type": "keyword", "span": [373, 377]}, {"value": "{", "type": "parenteses", "span": [378, 379]}, {"value": "\n", "type": "newline", "span": [379, 380]}, {"value": "println", "type": "identifier", "span": [381, 388]}, {"value": "(", "type": "parenteses", "span": [388, 389]}, {"value": "3", "type": "int", "span": [389, 390]}, {"value": ")", "type": "parenteses", "span": [390, 391]}, {"value": "\n", "type": "newline", "span": [391, 392]}, {"value": "}", "type": "parenteses", "span": [392, 393]}, {"value": "\n", "type": "newline", "span": [393, 394]}, {"value": "# funcDefine", "type": "comment", "span": [394, 406]}, {"value": "\n", "type": "newline", "span": [406, 407]}, {"value": "fn", "type": "keyword", "span": [407, 409]}, {"value": "addnums", "type": "identifier", "span": [410, 417]}, {"value": "(", "type": "parenteses", "span": [417, 418]}, {"value": "int", "type": "type", "span": [418, 421]}, {"value": "x", "type": "identifier", "span": [422, 423]}, {"value": ",", "type": "split", "span": [423, 424]}, {"value": "int", "type": "type", "span": [425, 428]}, {"value": "y", "type": "identifier", "span": [429, 430]}, {"value": ")", "type": "parenteses", "span": [430, 431]}, {"value": "->", "type": "return", "span": [432, 434]}, {"value": "int", "type": "type", "span": [435, 438]}, {"value": "{", "type": "parenteses", "span": [439, 440]}, {"value": "\n", "type": "newline", "span": [440, 441]}, {"value": "# returnStatement", "type": "comment", "span": [442, 459]}, {"value": "\n", "type": "newline", "span": [459, 460]}, {"value": "return", "type": "keyword", "span": [461, 467]}, {"value": "x", "type": "identifier", "span": [468, 469]}, {"value": "+", "type": "numOp", "span": [470, 471]}, {"value": "y", "type": "identifier", "span": [472, 473]}, {"value": "\n", "type": "newline", "span": [473, 474]}, {"value": "}", "type": "parenteses", "span": [474, 475]}, {"value": "\n", "type": "newline", "span": [475, 476]}, {"value": "\n", "type": "newline", "span": [476, 477]}, {"value": "# varUpdate + funcCall", "type": "comment", "span": [477, 499]}, {"value": "\n", "type": "newline", "span": [499, 500]}, {"value": "mutable_var", "type": "identifier", "span": [500, 511]}, {"value": "+=", "type": "assign", "span": [512, 514]}, {"value": "addnums", "type": "identifier", "span": [515, 522]}, {"value": "(", "type": "parenteses", "span": [522, 523]}, {"value": "(", "type": "parenteses", "span": [523, 524]}, {"value": "10", "type": "int", "span": [524, 526]}, {"value": "+", "type": "numOp", "span": [527, 528]}, {"value": "5", "type": "int", "span": [529, 530]}, {"value": ")", "type": "parenteses", "span": [530, 531]}, {"value": "/", "type": "numOp", "span": [531, 532]}, {"value": "3", "type": "int", "span": [532, 533]}, {"value": "*", "type": "numOp", "span": [534, 535]}, {"value": "2", "type": "int", "span": [536, 537]}, {"value": ",", "type": "split", "span": [537, 538]}, {"value": "5", "type": "int", "span": [539, 540]}, {"value": ")", "type": "parenteses", "span": [540, 541]}, {"value": "\n", "type": "newline", "span": [541, 542]}, {"value": "\n", "type": "newline", "span": [542, 543]}, {"value": "# whileLoop", "type": "comment", "span": [543, 554]}, {"value": "\n", "type": "newline", "span": [554, 555]}, {"value": "while", "type": "keyword", "span": [555, 560]}, {"value": "mutable_var", "type": "identifier", "span": [561, 572]}, {"value": ">", "type": "logicOp", "span": [573, 574]}, {"value": "0", "type": "int", "span": [575, 576]}, {"value": "{", "type": "parenteses", "span": [577, 578]}, {"value": "\n", "type": "newline", "span": [578, 579]}, {"value": "println", "type": "identifier", "span": [580, 587]}, {"value": "(", "type": "parenteses", "span": [587, 588]}, {"value": "mutable_var", "type": "identifier", "span": [588, 599]}, {"value": ")", "type": "parenteses", "span": [599, 600]}, {"value": "\n", "type": "newline", "span": [600, 601]}, {"value": "mutable_var", "type": "identifier", "span": [602, 613]}, {"value": "-=", "type": "assign", "span": [614, 616]}, {"value": "1", "type": "int", "span": [617, 618]}, {"value": "\n", "type": "newline", "span": [618, 619]}, {"value": "}", "type": "parenteses", "span": [619, 620]}, {"value": "\n", "type": "newline", "span": [620, 621]}, {"value": "\n", "type": "newline", "span": [621, 622]}, {"value": "# Testing special symbols", "type": "comment", "span": [622, 647]}, {"value": "\n", "type": "newline", "span": [647, 648]}, {"value": "\n", "type": "newline", "span": [648, 649]}, {"value": "# Binary Ops", "type": "comment", "span": [649, 661]}, {"value": "\n", "type": "newline", "span": [661, 662]}, {"value": "mutable_var", "type": "identifier", "span": [662, 673]}, {"value": "=", "type": "assign", "span": [674, 675]}, {"value": "1", "type": "int", "span": [676, 677]}, {"value": "&&", "type": "binaryOp", "span": [678, 680]}, {"value": "3", "type": "int", "span": [681, 682]}, {"value": "\n", "type": "newline", "span": [682, 683]}, {"value": "mutable_var", "type": "identifier", "span": [683, 694]}, {"value": "=", "type": "assign", "span": [695, 696]}, {"value": "1", "type": "int", "span": [697, 698]}, {"value": "||", "type": "binaryOp", "span": [699, 701]}, {"value": "3", "type": "int", "span": [702, 703]}, {"value": "\n", "type": "newline", "span": [703, 704]}, {"value": "mutable_var", "type": "identifier", "span": [704, 715]}, {"value": "=", "type": "assign", "span": [716, 717]}, {"value": "1", "type": "int", "span": [718, 719]}, {"value": "^^", "type": "binaryOp", "span": [720, 722]}, {"value": "3", "type": "int", "span": [723, 724]}, {"value": "\n", "type": "newline", "span": [724, 725]}, {"value": "\n", "type": "newline", "span": [725, 726]}, {"value": "# Number Ops", "type": "comment", "span": [726, 738]}, {"value": "\n", "type": "newline", "span": [738, 739]}, {"value": "mutable_var", "type": "identifier", "span": [739, 750]}, {"value": "=", "type": "assign", "span": [751, 752]}, {"value": "2", "type": "int", "span": [753, 754]}, {"value": "^", "type": "numOp", "span": [755, 756]}, {"value": "3", "type": "int", "span": [757, 758]}, {"value": "\n", "type": "newline", "span": [758, 759]}, {"value": "\n", "type": "newline", "span": [759, 760]}, {"value": "# String Ops", "type": "comment", "span": [760, 772]}, {"value": "\n", "type": "newline", "span": [772, 773]}, {"value": "str", "type": "type", "span": [773, 776]}, {"value": "test_str", "type": "identifier", "span": [777, 785]}, {"value": "=", "type": "assign", "span": [786, 787]}, {"value": "\"hello\"", "type": "string", "span": [788, 795]}, {"value": "><", "type": "strOp", "span": [796, 798]}, {"value": "\" \"", "type": "string", "span": [799, 802]}, {"value": "><", "type": "strOp", "span": [803, 805]}, {"value": "\"world\"", "type": "string", "span": [806, 813]}, {"value": "\n", "type": "newline", "span": [813, 814]}, {"value": "\n", "type": "newline", "span": [814, 815]}, {"value": "# Bool Ops", "type": "comment", "span": [815, 825]}, {"value": "\n", "type": "newline", "span": [825, 826]}, {"value": "bool", "type": "type", "span": [826, 830]}, {"value": "test_bool", "type": "identifier", "span": [831, 840]}, {"value": "=", "type": "assign", "span": [841, 842]}, {"value": "true", "type": "bool", "span": [843, 847]}, {"value": "|", "type": "boolOp", "span": [848, 849]}, {"value": "false", "type": "identifier", "span": [850, 855]}, {"value": "\n", "type": "newline", "span": [855, 856]}, {"value": "test_bool", "type": "identifier", "span": [856, 865]}, {"value": "=", "type": "assign", "span": [866, 867]}, {"value": "true", "type": "bool", "span": [868, 872]}, {"value": "|", "type": "boolOp", "span": [873, 874]}, {"value": "false", "type": "identifier", "span": [875, 880]}, {"value": "\n", "type": "newline", "span": [880, 881]}]